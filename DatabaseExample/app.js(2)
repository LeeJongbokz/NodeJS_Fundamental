
var express = require('express');
var http = require('http');
var path = require('path');


var bodyParser = require('body-parser');
var cookieParser = require('cookie-parser');
var static = require('serve-static');
var errorHandler = require('errorhandler');

var expressSession = require('express-session');

var expressErrorHandler = require('express-error-handler');

var MongoClient = require('mongodb').MongoClient; 

var database; 

// 익스프레스 객체 생성 
var app = express();

// 기본 속성 설정 
app.set('port', process.env.PORT || 3000);

// body-parser를 사용해 application/x-www-form-urlencoded 파싱
app.use(bodyParser.urlencoded({extended: true}));

// body-parser를 사용해 application/json 파싱
app.use(bodyParser.json());

// public 폴더를 static으로 오픈
app.use(express.static('public'));


// cookie-parser 설정 
app.use(cookieParser());


// 세션 설정 
app.use(expressSession({
    secret:'my key',
    resave: true,
    saveUninitialized: true
}));


var router = express.Router();


function connectDB(){

    var databaseUrl = 'mongodb://localhost:27017/local';

    MongoClient.connect(databaseUrl, function(err, db){
        if(err) throw err;

        console.log('데이터베이스에 연결되었습니다. : ' + databaseUrl);

        database = db.db('local'); 
    });

}


app.post('/process/login', function(req, res){

    console.log('/process/login 호출됨.');

    var paramId = req.body.id;
    console.log(paramId);
    var paramPassword = req.body.password;
    console.log(paramPassword);
    console.dir(database);

    if(database){
        console.log("hello this is Database");
        authUser(database, paramId, paramPassword, function(err, docs){
            if(err) {throw err;}

            if(docs){
                console.dir(docs);
                var username = docs[0].name;
                res.writeHead('200', {'Content-Type': 'text/html;charset=utf8'});
                res.write('<h1>로그인 성공</h1>');
                res.write('<div><p>사용자 아이디:' + paramId + '</p></div>');
                res.write('<div><p>사용자 이름: ' + username + '</p><?/div>');
                res.write("<br><br><a href='/public/login.html'> 다시 로그인하기</a>");
                res.end(); 
            }else{
                res.writeHead('200', {'Content-Type': 'text/html;charset=utf8'});
                res.write('<h1>로그인 실패</h1>');
                res.write('<div><p>아이디와 비밀번호를 다시 확인하십시오.</p></div>');
                res.write("<br><br><a href='/public/login.html'>다시 로그인하기</a>");
                res.end(); 
            }
        });
    }else{

        res.writeHead('200', {'Content-Type': 'text/html;charset=utf8'});
        res.write('<h2>데이터베이스 연결 실패</h2>');
        res.write('<div><p>데이터베이스에 연결하지 못했습니다.</p></div>');
        res.end(); 

    }

});




var authUser = function(database, id, password, callback){
    console.log('authUser 호출됨.');

    var users = database.collection('users');

    users.find({"id": id, "password": password}).toArray(function(err,docs){
        if(err){
            callback(err, null);
            return;
        }

        if(docs.length > 0){
            console.log('아이디 [%s], 비밀번호 [%s]가 일치하는 사용자 찾음', id, password);
            callback(null, docs);
        }else{
            console.log("일치하는 사용자를 찾지 못함.");
            callback(null, null);
        }
    });


}


/*
var errorHandler = expressErrorHandler({
    static:{
        '404': './404.html'
    }
});


app.use(expressErrorHandler.httpError(404));
app.use(errorHandler);
*/


app.use('/', router);

http.createServer(app).listen(app.get('port'), function(){
    console.log('서버가 시작되었습니다. 포트:' + app.get('port'));

    connectDB();

});

